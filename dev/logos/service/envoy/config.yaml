static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8081 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [ "*" ]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: api_interface
                            max_stream_duration:
                              max_stream_duration: 60s
                              grpc_timeout_header_max: 30s
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      default_source_code:
                        inline_string: |
                          function envoy_on_request(request_handle)
                              local cookies = request_handle:headers():get("cookie")

                              if cookies then
                                  local start = 1
                                  local semicolon_pos
                                  local end_pos
                                  local combined_cookies = ""

                                  repeat
                                      semicolon_pos = string.find(cookies, ";", start, true)

                                      if semicolon_pos == nil then
                                          end_pos = string.len(cookies)
                                      else
                                          end_pos = semicolon_pos - 1
                                      end

                                      local cookie = string.sub(cookies, start, end_pos)

                                      if not (combined_cookies == "") then
                                          combined_cookies = combined_cookies .. "|" .. cookie
                                      else
                                          combined_cookies = cookie
                                      end

                                      if not (semicolon_pos == nil) then
                                          start = semicolon_pos + 1
                                      end
                                  until semicolon_pos == nil

                                  request_handle:headers():add("logos-cookies", combined_cookies)
                              end
                          end

                          function envoy_on_response(response_handle)
                              local set_cookies = response_handle:headers():get("logos-set-cookies")
                              response_handle:logCritical("set_cookies: " .. (set_cookies or "nil"))

                              if set_cookies then
                                  local start = 1
                                  local delimiter_pos
                                  local end_pos

                                  repeat
                                      delimiter_pos = string.find(set_cookies, "|", start, true)

                                      if delimiter_pos == nil then
                                          end_pos = string.len(set_cookies)
                                      else
                                          end_pos = delimiter_pos - 1
                                      end

                                      local cookie = string.sub(set_cookies, start, end_pos)
                                      response_handle:headers():add("Set-Cookie", cookie)

                                      if not (delimiter_pos == nil) then
                                          start = delimiter_pos + 1
                                      end

                                  until delimiter_pos == nil
                              end
                          end
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: api_interface
      connect_timeout: 0.25s
      type: STRICT_DNS
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_0
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: backend-service.default.svc.cluster.local
                      port_value: 8081
